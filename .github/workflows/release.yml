on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'zulu'
      - name: Build with Gradle
        run: ./gradlew build
      - name: Get Release Version
        id: get_version
        run: VERSION=$(./gradlew currentVersion -q -Prelease.quiet) && echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        run: |
          gh release create \
            --generate-notes \
            --title 'Release ${{ steps.get_version.outputs.VERSION }}' \
            ${{ github.ref_name }} \
            build/libs/openssh-node-execution-${{ steps.get_version.outputs.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Plugin (zip)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/libs/openssh-node-execution-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: openssh-node-execution-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip